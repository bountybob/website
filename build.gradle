/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

plugins {
    id "base"
}

/*defaultTasks 'paul'*/

task copy (type: Copy, group: "Custom", description: "Just testing") {
	from "src"
	into "dest"
}

task zip (type: Zip, group: "Archive", description: "Zip file") {
	from "src"
}	

task upper (group: "Custom", description: "Uppercase", dependsOn: "paul") {
	doLast {
		String s = 'DataNovata'
		println 'orig=' + s
		println 'upper=' + s.toUpperCase()
	}
}

task paul (group: "Custom", description: "Hello") {
	ext.location = 'office'
    doLast {
        10.times { println 'hello' }
    }
}

task printProps {
	doLast {
		println paul.location
	}
}

3.times { counter -> 
	task "task$counter" {
		doLast {
			println "This is task $counter"
		}
	}	
}
task0.dependsOn task1, task2
task0.doFirst {
	println 'doFirst 1'
}
task0 {
	doFirst {
		println 'doFirst 2'
	}
}
task0 {
	doFirst {
		println 'doFirst 3'
	}
}
task0.doFirst {
	println 'doFirst 4'
}
task1.doLast {
	println "this is the version: $version"
}

gradle.taskGraph.whenReady {taskGraph ->
	if (taskGraph.hasTask(task0)) {
		version = 'do some task 0 processing'
	} else {
		version = 'no task 0 processing'
	}
}
	
		
